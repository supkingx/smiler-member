server.port=8081
spring.profiles.active=dev
spring.application.name=smiler-member

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/smiler_user?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456

# sharding 数据源
# 配置数据源,给数据源起别名
spring.shardingsphere.datasource.names=m0
# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true
# 数据源配置具体内容
spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://localhost:3306/smiler_user?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456
#指定表smiler_user的分布情况，配置表在哪个数据库里面，表名称都是什么
spring.shardingsphere.sharding.tables.smiler_user.actual-data-nodes=m0.smiler_user_$->{1..2}

#指定smiler_user表里面主键id 生成策略 SNOWFLAKE，（实际使用了自定义的Id生成器，将不用这条配置）
#spring.shardingsphere.sharding.tables.smiler_user.key-generator.column=id
#spring.shardingsphere.sharding.tables.smiler_user.key-generator.type=SNOWFLAKE

# 指定分片策略 约定id值偶数添加到表smiler_user_1，如果id是奇数添加到表smiler_user_2
spring.shardingsphere.sharding.tables.smiler_user.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.smiler_user.table-strategy.inline.algorithm-expression=smiler_user_$->{id.remainder(2).add(1)}
# 错误配置
#spring.shardingsphere.sharding.tables.smiler_user.table-strategy.inline.algorithm-expression=smiler_user_$->{id % 2 + 1}

# 打开SQL输出日志
spring.shardingsphere.props.sql.show=true

spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.database=3
spring.cache.type=redis
spring.cache.redis.time-to-live=6000000
spring.cache.redis.key-prefix=CACHE_
# 是否开启前缀功能
spring.cache.redis.use-key-prefix=true
# 是否缓存空值 防止缓存穿透
spring.cache.redis.cache-null-values=true

# rabbitMq配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/dev

# dubbo配置
dubbo.application.name=smiler-member
dubbo.protocol.port=20881
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.registry.client=zkclient

# kafka配置
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=3

spring.kafka.consumer.bootstrap-servers=localhost:9092
# 用户推送搜索topic
smiler.user.index.topic=${spring.profiles.active}.smiler.user.index
smiler.king.user.index.topic=${spring.profiles.active}.smiler.king.user.index

# sentinel 配置
spring.cloud.sentinel.transport.dashboard=localhost:8333
spring.cloud.sentinel.transport.port=8719
management.endpoints.web.exposure.include=*
